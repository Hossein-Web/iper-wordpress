<?php

function footer_sidebars()
{
    //Register sidebars
    register_sidebar(
        array(
            'name' => __( 'ناحیه فوتر اول', 'persian_bourse' ),
            'id' => 'footer_sidebar_1',
            'before_widget' => '<div class="footer-widget-wrapper">',
            'after_widget' => '</div><!-- .footer-widget-wrapper -->',
            'before_title' => '<h6>',
            'after_title' => '</h6>',
        )
    );

    register_sidebar(
        array(
            'name' => __( 'ناحیه فوتر دوم', 'persian_bourse' ),
            'id' => 'footer_sidebar_2',
            'before_widget' => '<div class="footer-widget-wrapper">',
            'after_widget' => '</div><!-- .footer-widget-wrapper -->',
            'before_title' => '<h6>',
            'after_title' => '</h6>',
        )
    );

    register_sidebar(
        array(
            'name' => __( 'ناحیه فوتر سوم', 'persian_bourse' ),
            'id' => 'footer_sidebar_3',
            'before_widget' => '<div class="footer-widget-wrapper">',
            'after_widget' => '</div><!-- .footer-widget-wrapper -->',
            'before_title' => '<h6>',
            'after_title' => '</h6>',
        )
    );

    //Register widgets
//    register_widget('list_widget');
}

add_action('widgets_init', 'footer_sidebars');

function main_page_sidebar() {

    // Register main page sidebar
    register_sidebar(
        [
            'name' => __( 'ناحیه ابزارک اصلی', 'persian_bourse' ),
            'id' => 'main_page_sidebar',
            'before_widget' => '',
            'after_widget' => '',
            'before_title' => '',
            'after_title' => '',
        ]
    );

    // Register widgets
    register_widget( 'Persian_Recent_Posts' );
}
add_action( 'widgets_init', 'main_page_sidebar' );

class list_widget extends WP_Widget
{
    public function __construct()
    {
        $widget_options = [
            'classname' => 'footer-widget-wrapper',
            'description' => 'دسترسی سریع'
        ];
        parent::__construct('list_widget', 'list widget', $widget_options);
    }

    public function widget($args, $instance)
    {
        echo $args['before_widget'];
        if (!empty($instance['title'])) {
            echo $args['before_title'];
            echo apply_filters('widget_title', $instance['title']);
            echo $args['after_title'];
        }
        echo $args['after_widget'];
    }
//    public function form($instance)
//    {
//        return parent::form($instance); // TODO: Change the autogenerated stub
//    }
//    public function update($new_instance, $old_instance)
//    {
//        return parent::update($new_instance, $old_instance); // TODO: Change the autogenerated stub
//    }
}

class Persian_Recent_Posts extends WP_Widget {

    /**
     * Sets up a new Recent Posts widget instance.
     *
     * @since 2.8.0
     */
    public function __construct() {
        $widget_ops = array(
            'classname'    => 'side-populars',
            'description'  => __( 'نوشته های اخیر همراه با تصویر', 'persian_bourse' )
        );
        parent::__construct( 'persian-recent-posts', __( 'نوشته های اخیر آی وحید', 'persian_bourse' ), $widget_ops );
    }

    /**
     * Outputs the content for the current Recent Posts widget instance.
     *
     * @since 2.8.0
     *
     * @param array $args     Display arguments including 'before_title', 'after_title',
     *                        'before_widget', and 'after_widget'.
     * @param array $instance Settings for the current Recent Posts widget instance.
     */
    public function widget( $args, $instance ) {

        $default_title = __( 'نوشته های پربازدید', 'persian_bourse' );
        $title         = ( ! empty( $instance['title'] ) ) ? $instance['title'] : $default_title;
        $number = ( ! empty( $instance['number'] ) ) ? absint( $instance['number'] ) : 3;
        $persian_query_args = [
            'posts_per_page'      => $number,
            'no_found_rows'       => true,
            'post_status'         => 'publish',
            'ignore_sticky_posts' => true,
        ];
        $most_visited_posts_query = new WP_Query( $persian_query_args );
        if ( ! $most_visited_posts_query->have_posts() ) {
            return;
        }?>
        <div class="side-populars">
            <?php
            if ( $title ) { ?>
                <div class="title title--blue title--small">
                    <h6><?php echo $title; ?></h6>
                    <a href="#"><?php _e( 'آرشیو', 'persian_bourse' ); ?></a>
                </div>
                <?php
            }
            if ( $most_visited_posts_query->have_posts() ) { ?>
                <ul class="side-populars__items-wrapper">
                    <?php while ( $most_visited_posts_query->have_posts() ) {
                        $most_visited_posts_query->the_post();
                        ?>
                        <li>
                            <?php if ( has_post_thumbnail() ) { ?>
                                <div class="img-wrapper">
                                    <?php the_post_thumbnail(); ?>
                                </div><!-- .img-wrapper -->
                            <?php } ?>
                            <div class="post-details">
                                <a href="<?php echo get_the_permalink(); ?>">
                                    <h6><?php echo esc_html( get_the_title() ); ?></h6>
                                </a>
                                <p><?php echo human_time_diff( get_the_time( 'U' ), current_time( 'U' ) ) . __( ' پیش', 'persian_bourse' );  ?></p>
                            </div>
                        </li>
                    <?php
                    }
                    wp_reset_postdata();
                    ?>
                </ul>
            <?php }
            ?>
        </div><!-- .side-populars -->
    <?php
        }

    /**
     * Handles updating the settings for the current Recent Posts widget instance.
     *
     * @since 2.8.0
     *
     * @param array $new_instance New settings for this instance as input by the user via
     *                            WP_Widget::form().
     * @param array $old_instance Old settings for this instance.
     * @return array Updated settings to save.
     */
    public function update( $new_instance, $old_instance ) {
        $instance              = $old_instance;
        $instance['title']     = $new_instance['title'];
        $instance['number']    = (int) $new_instance['number'];
        return $instance;
    }

    /**
     * Outputs the settings form for the Recent Posts widget.
     *
     * @since 2.8.0
     *
     * @param array $instance Current settings.
     */
    public function form( $instance ) {
        $title     = isset( $instance['title'] ) ? esc_attr( $instance['title'] ) : '';
        $number    = isset( $instance['number'] ) ? absint( $instance['number'] ) : 3;
        ?>
        <p>
            <label for="<?php echo $this->get_field_id( 'title' ); ?>"><?php _e( 'عنوان:', 'persian_bourse' ); ?></label>
            <input class="widefat" id="<?php echo $this->get_field_id( 'title' ); ?>" name="<?php echo $this->get_field_name( 'title' ); ?>" type="text" value="<?php echo $title; ?>" />
        </p>

        <p>
            <label for="<?php echo $this->get_field_id( 'number' ); ?>"><?php _e( 'تعداد پست ها:', 'persian_bourse' ); ?></label>
            <input class="tiny-text" id="<?php echo $this->get_field_id( 'number' ); ?>" name="<?php echo $this->get_field_name( 'number' ); ?>" type="number" step="1" min="1" value="<?php echo $number; ?>" size="3" />
        </p>

        <?php
    }
}

function archive_page_sidebar(){

    // Register archive page sidebar
    register_sidebar(
            [
                'name'              => __( 'ناحیه ابزارک برگه آرشیو', 'persian_bourse' ),
                'id'                => 'archive_page_sidebar',
                'before_widget'     => '',
                'after_widget' => '',
                'before_title' => '',
                'after_title' => '',
            ]
    );
    register_widget( 'persian_category' );
}
add_action( 'widgets_init', 'archive_page_sidebar' );

class persian_category extends WP_Widget{
    /**
     * Sets up a persian new Categories widget instance.
     *
     * @since 2.8.0
     */
    public function __construct() {
        $widget_ops = array(
            'classname'                   => 'side-categories',
            'description'                 => __( 'یک لیستی از دسته بندی ها را نمایش می دهد' ),
            'customize_selective_refresh' => true,
        );
        parent::__construct( 'persian_categories', __( 'دسته بندی های پرشین بورس', 'persian_bourse' ), $widget_ops );
    }

    public function widget( $args, $instance ) {

        $default_title = __( 'دسته بندی ها', 'persian_bourse' );
        $title         = ! empty( $instance['title'] ) ? $instance['title'] : $default_title;
        $title = apply_filters( 'widget_title', $title, $instance );
        $persian_hierarchical = ! empty( $instance['hierarchical'] ) ? '1' : '0';
        $persian_cat = get_categories();

        if( ! empty( $persian_cat ) ){
            ?>
            <div class="side-categories">
                <?php if ( $title ){
                    ?>
                    <h6 class="categories-title"><?php echo $title; ?></h6>
                    <?php
                } ?>
                <ul>
                    <?php
                    if ( $persian_hierarchical === '1' ){
                        foreach ( $persian_cat as $cat ){
                            if ( $cat->category_parent === 0 ){
                                $persian_args = [ 'parent' => $cat->cat_ID ];
                                $children_cat = get_categories( $persian_args );
                                ?>
                                <li class="<?php if ( !empty($children_cat )) { echo 'has-subcategory'; } ?>">
                                    <?php if ( empty( $children_cat ) ){
                                        ?>
                                        <a href="<?php echo esc_url(get_category_link( $cat->id )); ?>"><?php echo esc_html( $cat->cat_name ); ?></a>
                                        <?php
                                    }else{
                                        ?>
                                        <span><?php echo esc_html( $cat->cat_name ); ?></span>
                                    <?php
                                    } ?>
                                    <?php
                                    if ( !empty( $children_cat ) ){
                                        ?>
                                        <ul>
                                            <?php
                                            foreach ( $children_cat as $child ){
                                                ?>
                                                <li>
                                                    <a href="<?php echo esc_url( get_category_link( $child->id ) ); ?>"><?php echo esc_html( $child->cat_name ); ?></a>
                                                </li>
                                                <?php
                                            }
                                            ?>

                                        </ul>
                                        <?php
                                    }
                                    ?>
                                </li>
                                <?php
                            }
                        }
                    }
                    elseif( $persian_hierarchical === '0' ){
                        foreach ( $persian_cat as $cat ) {
                            ?>
                            <li>
                                <a href="<?php echo esc_url(get_category_link($cat->id)); ?>"><?php echo esc_html($cat->cat_name); ?></a>
                            </li>
                            <?php
                        }
                    }
                    ?>

                </ul>
                <?php

                ?>
            </div><!-- .side-categories -->
            <?php
        }

    }

    public function update( $new_instance, $old_instance ) {
        $instance                 = $old_instance;
        $instance['title']        = sanitize_text_field( $new_instance['title'] );
        $instance['hierarchical'] = ! empty( $new_instance['hierarchical'] ) ? 1 : 0;

        return $instance;
    }

    public function form( $instance ) {
        // Defaults.
        $instance     = wp_parse_args( (array) $instance, array( 'title' => '' ) );
        $hierarchical = isset( $instance['hierarchical'] ) ? (bool) $instance['hierarchical'] : false;
        ?>
        <p>
            <label for="<?php echo $this->get_field_id( 'title' ); ?>"><?php _e( 'Title:' ); ?></label>
            <input class="widefat" id="<?php echo $this->get_field_id( 'title' ); ?>" name="<?php echo $this->get_field_name( 'title' ); ?>" type="text" value="<?php echo esc_attr( $instance['title'] ); ?>" />
        </p>

        <p>
            <input type="checkbox" class="checkbox" id="<?php echo $this->get_field_id( 'hierarchical' ); ?>" name="<?php echo $this->get_field_name( 'hierarchical' ); ?>"<?php checked( $hierarchical ); ?> />
            <label for="<?php echo $this->get_field_id( 'hierarchical' ); ?>"><?php _e( 'Show hierarchy' ); ?></label>
        </p>
        <?php
    }
}